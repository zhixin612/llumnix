# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------
SERVER:
  HOST: "localhost"
  PORT: 18000
  REQUEST_OUTPUT_QUEUE_PORT: 1234
  LOG_REQUEST_TIMESTAMPS: True  # Zhixin
  LAUNCH_RAY_CLUSTER: True  # Zhixin
  LOG_LEVEL: "warning"

# -----------------------------------------------------------------------------
# MANAGER CONFIGURATION
# -----------------------------------------------------------------------------
MANAGER:
  # Time interval(s) to update instance info and pair migration
  #    1/POLLING_INTERVAL may not smaller than QPS, otherwise, the migration will be not precise.
  #    since migration policy cannot push pairs (P0->D0 P1->D0) if D0 is underloaded
  POLLING_INTERVAL: 0.5
  LOG_INSTANCE_INFO: True  # Zhixin: board will be enabled only when this is True
  LOG_FILENAME: "/root/llm/disagg/llumnix/examples/logs/test-minimal-overhead/test"
  ENABLE_TENSORBOARD: False

  INITIAL_INSTANCES: 1  # Zhixin
  ENABLE_PD_DISAGG: True  # Zhixin
  PD_RATIO: "1:3"

  # -------------------------- DISPATCH CONFIGURATION ---------------------------
  # Zhixin: [Attention] dispatch policy and metric decide the PREFILL instance instead of DECODE instance
  DISPATCH_POLICY: 'load'  # balanced, load, queue, flood, rr (Default=load)

  # -------------------------- MIGRATION CONFIGURATION --------------------------
  ENABLE_MIGRATION: True  # Zhixin
  PAIR_MIGRATION_FREQUENCY: 1  # * POLLING_INTERVAL
  # [migration_scheduler.pair_migration_policy] used for matching src and dst instances
  #   defrag_constrained: match instances with the highest and lowest load (with specific load metric)
  #   balanced: push migration pairs if that can reduce their load difference
  PAIR_MIGRATION_POLICY: 'defrag_constrained'
  # [migration_filter] used for NO_CONSTRAINT & DECODING_2_DECODING migration policy
  # [migration_policy] used for Balanced migration policy (reduce unnecessary migrations)
  MIGRATE_OUT_THRESHOLD: -3.0


# -----------------------------------------------------------------------------
# INSTANCE CONFIGURATION
# -----------------------------------------------------------------------------
INSTANCE:
  # ------------------------- LOAD METRICS CONFIGURATION ------------------------
  # Zhixin: [Attention] dispatch policy and metric decide the PREFILL instance instead of DECODE instance
  DISPATCH_LOAD_METRIC: 'remaining_steps'
  # remaining_steps
  # predicted_remaining_blocks
  # predicted_used_blocks
  # sct: sct_max, sct_mem, sct_bw, sct_comp
  MIGRATION_LOAD_METRIC: 'remaining_steps'

  # -------------------------- MIGRATION CONFIGURATION --------------------------
  # Enable defragmentation through migration based on virtual usage
  ENABLE_DEFRAG: True  # Zhixin
  # Request migration policy
  REQUEST_MIGRATION_POLICY: 'SR'  # D2D?
  # Drop migration if the number of stages > migration_max_stages
  MIGRATION_MAX_STAGES: 3
  # If the number of remain blocks < migration_last_stage_max_blocks, do last stage migration
  MIGRATION_LAST_STAGE_MAX_BLOCKS: 16
  MIGRATION_BACKEND: "gloo"
  # Number of cache blocks in migration
  MIGRATION_BUFFER_BLOCKS: 512
  # Number of kv-cache layers to transfer in each round during migration
  MIGRATION_NUM_LAYERS: 1
